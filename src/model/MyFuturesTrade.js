/**
 * Gate API v4
 * APIv4 provides spot, margin and futures trading operations. There are public APIs to retrieve the real-time market statistics, and private APIs which needs authentication to trade on user's behalf.
 *
 * OpenAPI spec version: 4.6.0
 * Contact: support@mail.gate.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.4
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.GateApi) {
      root.GateApi = {};
    }
    root.GateApi.MyFuturesTrade = factory(root.GateApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';



  /**
   * The MyFuturesTrade model module.
   * @module model/MyFuturesTrade
   * @version 4.6.0
   */

  /**
   * Constructs a new <code>MyFuturesTrade</code>.
   * @alias module:model/MyFuturesTrade
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>MyFuturesTrade</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MyFuturesTrade} obj Optional instance to populate.
   * @return {module:model/MyFuturesTrade} The populated <code>MyFuturesTrade</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('create_time')) {
        obj['create_time'] = ApiClient.convertToType(data['create_time'], 'Number');
      }
      if (data.hasOwnProperty('contract')) {
        obj['contract'] = ApiClient.convertToType(data['contract'], 'String');
      }
      if (data.hasOwnProperty('order_id')) {
        obj['order_id'] = ApiClient.convertToType(data['order_id'], 'String');
      }
      if (data.hasOwnProperty('size')) {
        obj['size'] = ApiClient.convertToType(data['size'], 'Number');
      }
      if (data.hasOwnProperty('price')) {
        obj['price'] = ApiClient.convertToType(data['price'], 'String');
      }
      if (data.hasOwnProperty('role')) {
        obj['role'] = ApiClient.convertToType(data['role'], 'String');
      }
    }
    return obj;
  }

  /**
   * Trade ID
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * Trading time
   * @member {Number} create_time
   */
  exports.prototype['create_time'] = undefined;
  /**
   * Futures contract
   * @member {String} contract
   */
  exports.prototype['contract'] = undefined;
  /**
   * Order ID related
   * @member {String} order_id
   */
  exports.prototype['order_id'] = undefined;
  /**
   * Trading size
   * @member {Number} size
   */
  exports.prototype['size'] = undefined;
  /**
   * Trading price
   * @member {String} price
   */
  exports.prototype['price'] = undefined;
  /**
   * Trade role. Available values are `taker` and `maker`
   * @member {module:model/MyFuturesTrade.RoleEnum} role
   */
  exports.prototype['role'] = undefined;


  /**
   * Allowed values for the <code>role</code> property.
   * @enum {String}
   * @readonly
   */
  exports.RoleEnum = {
    /**
     * value: "taker"
     * @const
     */
    "taker": "taker",
    /**
     * value: "maker"
     * @const
     */
    "maker": "maker"  };


  return exports;
}));


