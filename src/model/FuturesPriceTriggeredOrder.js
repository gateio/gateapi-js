/**
 * Gate API v4
 * APIv4 provides spot, margin and futures trading operations. There are public APIs to retrieve the real-time market statistics, and private APIs which needs authentication to trade on user's behalf.
 *
 * Contact: support@mail.gate.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.4
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/FuturesInitialOrder', 'model/FuturesPriceTrigger'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./FuturesInitialOrder'), require('./FuturesPriceTrigger'));
  } else {
    // Browser globals (root is window)
    if (!root.GateApi) {
      root.GateApi = {};
    }
    root.GateApi.FuturesPriceTriggeredOrder = factory(root.GateApi.ApiClient, root.GateApi.FuturesInitialOrder, root.GateApi.FuturesPriceTrigger);
  }
}(this, function(ApiClient, FuturesInitialOrder, FuturesPriceTrigger) {
  'use strict';



  /**
   * The FuturesPriceTriggeredOrder model module.
   * @module model/FuturesPriceTriggeredOrder
   */

  /**
   * Constructs a new <code>FuturesPriceTriggeredOrder</code>.
   * Futures order details
   * @alias module:model/FuturesPriceTriggeredOrder
   * @class
   * @param initial {module:model/FuturesInitialOrder} 
   * @param trigger {module:model/FuturesPriceTrigger} 
   */
  var exports = function(initial, trigger) {
    var _this = this;

    _this['initial'] = initial;
    _this['trigger'] = trigger;
  };

  /**
   * Constructs a <code>FuturesPriceTriggeredOrder</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FuturesPriceTriggeredOrder} obj Optional instance to populate.
   * @return {module:model/FuturesPriceTriggeredOrder} The populated <code>FuturesPriceTriggeredOrder</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('initial')) {
        obj['initial'] = FuturesInitialOrder.constructFromObject(data['initial']);
      }
      if (data.hasOwnProperty('trigger')) {
        obj['trigger'] = FuturesPriceTrigger.constructFromObject(data['trigger']);
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('user')) {
        obj['user'] = ApiClient.convertToType(data['user'], 'Number');
      }
      if (data.hasOwnProperty('create_time')) {
        obj['create_time'] = ApiClient.convertToType(data['create_time'], 'Number');
      }
      if (data.hasOwnProperty('finish_time')) {
        obj['finish_time'] = ApiClient.convertToType(data['finish_time'], 'Number');
      }
      if (data.hasOwnProperty('trade_id')) {
        obj['trade_id'] = ApiClient.convertToType(data['trade_id'], 'Number');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('finish_as')) {
        obj['finish_as'] = ApiClient.convertToType(data['finish_as'], 'String');
      }
      if (data.hasOwnProperty('reason')) {
        obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {module:model/FuturesInitialOrder} initial
   */
  exports.prototype['initial'] = undefined;
  /**
   * @member {module:model/FuturesPriceTrigger} trigger
   */
  exports.prototype['trigger'] = undefined;
  /**
   * Auto order ID
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * User ID
   * @member {Number} user
   */
  exports.prototype['user'] = undefined;
  /**
   * Creation time
   * @member {Number} create_time
   */
  exports.prototype['create_time'] = undefined;
  /**
   * Finished time
   * @member {Number} finish_time
   */
  exports.prototype['finish_time'] = undefined;
  /**
   * ID of the newly created order on condition triggered
   * @member {Number} trade_id
   */
  exports.prototype['trade_id'] = undefined;
  /**
   * Order status.
   * @member {module:model/FuturesPriceTriggeredOrder.StatusEnum} status
   */
  exports.prototype['status'] = undefined;
  /**
   * How order is finished
   * @member {module:model/FuturesPriceTriggeredOrder.FinishAsEnum} finish_as
   */
  exports.prototype['finish_as'] = undefined;
  /**
   * Extra messages of how order is finished
   * @member {String} reason
   */
  exports.prototype['reason'] = undefined;


  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "open"
     * @const
     */
    "open": "open",
    /**
     * value: "finished"
     * @const
     */
    "finished": "finished"  };

  /**
   * Allowed values for the <code>finish_as</code> property.
   * @enum {String}
   * @readonly
   */
  exports.FinishAsEnum = {
    /**
     * value: "cancelled"
     * @const
     */
    "cancelled": "cancelled",
    /**
     * value: "succeeded"
     * @const
     */
    "succeeded": "succeeded",
    /**
     * value: "failed"
     * @const
     */
    "failed": "failed",
    /**
     * value: "expired"
     * @const
     */
    "expired": "expired"  };


  return exports;
}));


