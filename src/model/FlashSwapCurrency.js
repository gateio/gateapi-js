/**
 * Gate API v4
 * Welcome to Gate.io API  APIv4 provides spot, margin and futures trading operations. There are public APIs to retrieve the real-time market statistics, and private APIs which needs authentication to trade on user's behalf.
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.GateApi) {
      root.GateApi = {};
    }
    root.GateApi.FlashSwapCurrency = factory(root.GateApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';


  /**
   * The FlashSwapCurrency model module.
   * @module model/FlashSwapCurrency
   */

  /**
   * Constructs a new <code>FlashSwapCurrency</code>.
   * Currencies supported in flash swap
   * @alias module:model/FlashSwapCurrency
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>FlashSwapCurrency</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FlashSwapCurrency} obj Optional instance to populate.
   * @return {module:model/FlashSwapCurrency} The populated <code>FlashSwapCurrency</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('currency')) {
        obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
      }
      if (data.hasOwnProperty('min_amount')) {
        obj['min_amount'] = ApiClient.convertToType(data['min_amount'], 'String');
      }
      if (data.hasOwnProperty('max_amount')) {
        obj['max_amount'] = ApiClient.convertToType(data['max_amount'], 'String');
      }
      if (data.hasOwnProperty('swappable')) {
        obj['swappable'] = ApiClient.convertToType(data['swappable'], ['String']);
      }
    }
    return obj;
  }

  /**
   * Currency name
   * @member {String} currency
   */
  exports.prototype['currency'] = undefined;
  /**
   * Minimum amount required in flash swap
   * @member {String} min_amount
   */
  exports.prototype['min_amount'] = undefined;
  /**
   * Maximum amount allowed in flash swap
   * @member {String} max_amount
   */
  exports.prototype['max_amount'] = undefined;
  /**
   * Currencies which can be swapped to from this currency
   * @member {Array.<String>} swappable
   */
  exports.prototype['swappable'] = undefined;



  return exports;
}));

