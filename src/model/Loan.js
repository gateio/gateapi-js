/**
 * Gate API v4
 * APIv4 provides spot, margin and futures trading operations. There are public APIs to retrieve the real-time market statistics, and private APIs which needs authentication to trade on user's behalf.
 *
 * OpenAPI spec version: 4.6.0
 * Contact: support@mail.gate.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.4
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.GateApi) {
      root.GateApi = {};
    }
    root.GateApi.Loan = factory(root.GateApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';



  /**
   * The Loan model module.
   * @module model/Loan
   * @version 4.6.0
   */

  /**
   * Constructs a new <code>Loan</code>.
   * @alias module:model/Loan
   * @class
   * @param side {module:model/Loan.SideEnum} Loan side
   * @param currency {String} Loan currency
   * @param rate {String} Loan rate
   * @param amount {String} Loan amount
   * @param days {Number} Loan days
   */
  var exports = function(side, currency, rate, amount, days) {
    var _this = this;

    _this['side'] = side;
    _this['currency'] = currency;
    _this['rate'] = rate;
    _this['amount'] = amount;
    _this['days'] = days;
  };

  /**
   * Constructs a <code>Loan</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Loan} obj Optional instance to populate.
   * @return {module:model/Loan} The populated <code>Loan</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('create_time')) {
        obj['create_time'] = ApiClient.convertToType(data['create_time'], 'String');
      }
      if (data.hasOwnProperty('expire_time')) {
        obj['expire_time'] = ApiClient.convertToType(data['expire_time'], 'String');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('side')) {
        obj['side'] = ApiClient.convertToType(data['side'], 'String');
      }
      if (data.hasOwnProperty('currency')) {
        obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
      }
      if (data.hasOwnProperty('rate')) {
        obj['rate'] = ApiClient.convertToType(data['rate'], 'String');
      }
      if (data.hasOwnProperty('amount')) {
        obj['amount'] = ApiClient.convertToType(data['amount'], 'String');
      }
      if (data.hasOwnProperty('days')) {
        obj['days'] = ApiClient.convertToType(data['days'], 'Number');
      }
      if (data.hasOwnProperty('auto_renew')) {
        obj['auto_renew'] = ApiClient.convertToType(data['auto_renew'], 'Boolean');
      }
      if (data.hasOwnProperty('currency_pair')) {
        obj['currency_pair'] = ApiClient.convertToType(data['currency_pair'], 'String');
      }
      if (data.hasOwnProperty('left')) {
        obj['left'] = ApiClient.convertToType(data['left'], 'String');
      }
      if (data.hasOwnProperty('repaid')) {
        obj['repaid'] = ApiClient.convertToType(data['repaid'], 'String');
      }
      if (data.hasOwnProperty('paid_interest')) {
        obj['paid_interest'] = ApiClient.convertToType(data['paid_interest'], 'String');
      }
      if (data.hasOwnProperty('unpaid_interest')) {
        obj['unpaid_interest'] = ApiClient.convertToType(data['unpaid_interest'], 'String');
      }
    }
    return obj;
  }

  /**
   * Loan ID
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * Creation time
   * @member {String} create_time
   */
  exports.prototype['create_time'] = undefined;
  /**
   * Repay time of the loan. No value will be returned for lending loan
   * @member {String} expire_time
   */
  exports.prototype['expire_time'] = undefined;
  /**
   * Loan status  open - not fully loaned loaned - all loaned out for lending loan; loaned in for borrowing side finished - loan is finished, either being all repaid or cancelled by the lender auto_repaid - automatically repaid by the system
   * @member {module:model/Loan.StatusEnum} status
   */
  exports.prototype['status'] = undefined;
  /**
   * Loan side
   * @member {module:model/Loan.SideEnum} side
   */
  exports.prototype['side'] = undefined;
  /**
   * Loan currency
   * @member {String} currency
   */
  exports.prototype['currency'] = undefined;
  /**
   * Loan rate
   * @member {String} rate
   */
  exports.prototype['rate'] = undefined;
  /**
   * Loan amount
   * @member {String} amount
   */
  exports.prototype['amount'] = undefined;
  /**
   * Loan days
   * @member {Number} days
   */
  exports.prototype['days'] = undefined;
  /**
   * Auto renew the loan on expiration
   * @member {Boolean} auto_renew
   * @default false
   */
  exports.prototype['auto_renew'] = false;
  /**
   * Currency pair. Required for borrowing side
   * @member {String} currency_pair
   */
  exports.prototype['currency_pair'] = undefined;
  /**
   * Amount not lending out
   * @member {String} left
   */
  exports.prototype['left'] = undefined;
  /**
   * Repaid amount
   * @member {String} repaid
   */
  exports.prototype['repaid'] = undefined;
  /**
   * Repaid interest
   * @member {String} paid_interest
   */
  exports.prototype['paid_interest'] = undefined;
  /**
   * Interest not repaid
   * @member {String} unpaid_interest
   */
  exports.prototype['unpaid_interest'] = undefined;


  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "open"
     * @const
     */
    "open": "open",
    /**
     * value: "loaned"
     * @const
     */
    "loaned": "loaned",
    /**
     * value: "finished"
     * @const
     */
    "finished": "finished",
    /**
     * value: "auto_repaid"
     * @const
     */
    "auto_repaid": "auto_repaid"  };

  /**
   * Allowed values for the <code>side</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SideEnum = {
    /**
     * value: "lend"
     * @const
     */
    "lend": "lend",
    /**
     * value: "borrow"
     * @const
     */
    "borrow": "borrow"  };


  return exports;
}));


