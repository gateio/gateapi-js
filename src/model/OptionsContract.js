/**
 * Gate API v4
 * Welcome to Gate.io API  APIv4 provides spot, margin and futures trading operations. There are public APIs to retrieve the real-time market statistics, and private APIs which needs authentication to trade on user's behalf.
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.GateApi) {
      root.GateApi = {};
    }
    root.GateApi.OptionsContract = factory(root.GateApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';


  /**
   * The OptionsContract model module.
   * @module model/OptionsContract
   */

  /**
   * Constructs a new <code>OptionsContract</code>.
   * Futures contract details
   * @alias module:model/OptionsContract
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>OptionsContract</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/OptionsContract} obj Optional instance to populate.
   * @return {module:model/OptionsContract} The populated <code>OptionsContract</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('tag')) {
        obj['tag'] = ApiClient.convertToType(data['tag'], 'String');
      }
      if (data.hasOwnProperty('create_time')) {
        obj['create_time'] = ApiClient.convertToType(data['create_time'], 'Number');
      }
      if (data.hasOwnProperty('expiration_time')) {
        obj['expiration_time'] = ApiClient.convertToType(data['expiration_time'], 'Number');
      }
      if (data.hasOwnProperty('is_call')) {
        obj['is_call'] = ApiClient.convertToType(data['is_call'], 'Boolean');
      }
      if (data.hasOwnProperty('multiplier')) {
        obj['multiplier'] = ApiClient.convertToType(data['multiplier'], 'String');
      }
      if (data.hasOwnProperty('underlying')) {
        obj['underlying'] = ApiClient.convertToType(data['underlying'], 'String');
      }
      if (data.hasOwnProperty('underlying_price')) {
        obj['underlying_price'] = ApiClient.convertToType(data['underlying_price'], 'String');
      }
      if (data.hasOwnProperty('last_price')) {
        obj['last_price'] = ApiClient.convertToType(data['last_price'], 'String');
      }
      if (data.hasOwnProperty('mark_price')) {
        obj['mark_price'] = ApiClient.convertToType(data['mark_price'], 'String');
      }
      if (data.hasOwnProperty('index_price')) {
        obj['index_price'] = ApiClient.convertToType(data['index_price'], 'String');
      }
      if (data.hasOwnProperty('maker_fee_rate')) {
        obj['maker_fee_rate'] = ApiClient.convertToType(data['maker_fee_rate'], 'String');
      }
      if (data.hasOwnProperty('taker_fee_rate')) {
        obj['taker_fee_rate'] = ApiClient.convertToType(data['taker_fee_rate'], 'String');
      }
      if (data.hasOwnProperty('order_price_round')) {
        obj['order_price_round'] = ApiClient.convertToType(data['order_price_round'], 'String');
      }
      if (data.hasOwnProperty('mark_price_round')) {
        obj['mark_price_round'] = ApiClient.convertToType(data['mark_price_round'], 'String');
      }
      if (data.hasOwnProperty('order_size_min')) {
        obj['order_size_min'] = ApiClient.convertToType(data['order_size_min'], 'Number');
      }
      if (data.hasOwnProperty('order_size_max')) {
        obj['order_size_max'] = ApiClient.convertToType(data['order_size_max'], 'Number');
      }
      if (data.hasOwnProperty('order_price_deviate')) {
        obj['order_price_deviate'] = ApiClient.convertToType(data['order_price_deviate'], 'String');
      }
      if (data.hasOwnProperty('ref_discount_rate')) {
        obj['ref_discount_rate'] = ApiClient.convertToType(data['ref_discount_rate'], 'String');
      }
      if (data.hasOwnProperty('ref_rebate_rate')) {
        obj['ref_rebate_rate'] = ApiClient.convertToType(data['ref_rebate_rate'], 'String');
      }
      if (data.hasOwnProperty('orderbook_id')) {
        obj['orderbook_id'] = ApiClient.convertToType(data['orderbook_id'], 'Number');
      }
      if (data.hasOwnProperty('trade_id')) {
        obj['trade_id'] = ApiClient.convertToType(data['trade_id'], 'Number');
      }
      if (data.hasOwnProperty('trade_size')) {
        obj['trade_size'] = ApiClient.convertToType(data['trade_size'], 'Number');
      }
      if (data.hasOwnProperty('position_size')) {
        obj['position_size'] = ApiClient.convertToType(data['position_size'], 'Number');
      }
      if (data.hasOwnProperty('orders_limit')) {
        obj['orders_limit'] = ApiClient.convertToType(data['orders_limit'], 'Number');
      }
    }
    return obj;
  }

  /**
   * Futures contract
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * 标记
   * @member {String} tag
   */
  exports.prototype['tag'] = undefined;
  /**
   * Creation time
   * @member {Number} create_time
   */
  exports.prototype['create_time'] = undefined;
  /**
   * Expiration time
   * @member {Number} expiration_time
   */
  exports.prototype['expiration_time'] = undefined;
  /**
   * `true` means call options, while `false` is put options
   * @member {Boolean} is_call
   */
  exports.prototype['is_call'] = undefined;
  /**
   * Multiplier used in converting from invoicing to settlement currency
   * @member {String} multiplier
   */
  exports.prototype['multiplier'] = undefined;
  /**
   * Underlying
   * @member {String} underlying
   */
  exports.prototype['underlying'] = undefined;
  /**
   * Underlying price
   * @member {String} underlying_price
   */
  exports.prototype['underlying_price'] = undefined;
  /**
   * Last trading price
   * @member {String} last_price
   */
  exports.prototype['last_price'] = undefined;
  /**
   * Current mark price
   * @member {String} mark_price
   */
  exports.prototype['mark_price'] = undefined;
  /**
   * Current index price
   * @member {String} index_price
   */
  exports.prototype['index_price'] = undefined;
  /**
   * Maker fee rate, where negative means rebate
   * @member {String} maker_fee_rate
   */
  exports.prototype['maker_fee_rate'] = undefined;
  /**
   * Taker fee rate
   * @member {String} taker_fee_rate
   */
  exports.prototype['taker_fee_rate'] = undefined;
  /**
   * Minimum order price increment
   * @member {String} order_price_round
   */
  exports.prototype['order_price_round'] = undefined;
  /**
   * Minimum mark price increment
   * @member {String} mark_price_round
   */
  exports.prototype['mark_price_round'] = undefined;
  /**
   * Minimum order size the contract allowed
   * @member {Number} order_size_min
   */
  exports.prototype['order_size_min'] = undefined;
  /**
   * Maximum order size the contract allowed
   * @member {Number} order_size_max
   */
  exports.prototype['order_size_max'] = undefined;
  /**
   * deviation between order price and current index price. If price of an order is denoted as order_price, it must meet the following condition:      abs(order_price - mark_price) <= mark_price * order_price_deviate
   * @member {String} order_price_deviate
   */
  exports.prototype['order_price_deviate'] = undefined;
  /**
   * Referral fee rate discount
   * @member {String} ref_discount_rate
   */
  exports.prototype['ref_discount_rate'] = undefined;
  /**
   * Referrer commission rate
   * @member {String} ref_rebate_rate
   */
  exports.prototype['ref_rebate_rate'] = undefined;
  /**
   * Current orderbook ID
   * @member {Number} orderbook_id
   */
  exports.prototype['orderbook_id'] = undefined;
  /**
   * Current trade ID
   * @member {Number} trade_id
   */
  exports.prototype['trade_id'] = undefined;
  /**
   * Historical accumulated trade size
   * @member {Number} trade_size
   */
  exports.prototype['trade_size'] = undefined;
  /**
   * Current total long position size
   * @member {Number} position_size
   */
  exports.prototype['position_size'] = undefined;
  /**
   * Maximum number of open orders
   * @member {Number} orders_limit
   */
  exports.prototype['orders_limit'] = undefined;



  return exports;
}));

